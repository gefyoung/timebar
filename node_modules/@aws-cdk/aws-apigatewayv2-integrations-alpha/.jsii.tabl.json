{
  "version": "2",
  "toolVersion": "1.50.0",
  "snippets": {
    "078924e40671c54ddc603fa504bc5355c957217f39f97dfb7c59a2f383810f41": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import HttpLambdaIntegration\n\n# books_default_fn is of type Function\n\nbooks_integration = HttpLambdaIntegration(\"BooksIntegration\", books_default_fn)\n\nhttp_api = apigwv2.HttpApi(self, \"HttpApi\")\n\nhttp_api.add_routes(\n    path=\"/books\",\n    methods=[apigwv2.HttpMethod.GET],\n    integration=books_integration\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nFunction booksDefaultFn;\n\nHttpLambdaIntegration booksIntegration = new HttpLambdaIntegration(\"BooksIntegration\", booksDefaultFn);\n\nHttpApi httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.AddRoutes(new AddRoutesOptions {\n    Path = \"/books\",\n    Methods = new [] { HttpMethod.GET },\n    Integration = booksIntegration\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpLambdaIntegration;\n\nFunction booksDefaultFn;\n\nHttpLambdaIntegration booksIntegration = new HttpLambdaIntegration(\"BooksIntegration\", booksDefaultFn);\n\nHttpApi httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.addRoutes(AddRoutesOptions.builder()\n        .path(\"/books\")\n        .methods(List.of(HttpMethod.GET))\n        .integration(booksIntegration)\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "import { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const booksDefaultFn: lambda.Function;\nconst booksIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha"
        },
        "field": {
          "field": "markdown",
          "line": 43
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.AddRoutesOptions",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi#addRoutes",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod#GET",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpLambdaIntegration",
        "aws-cdk-lib.aws_lambda.IFunction"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const booksDefaultFn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst booksIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 19,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 4,
        "196": 1,
        "197": 2,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "71064f436092187a034383ae4244298b4535b7b015b1919f6f9144ab0022386e"
    },
    "3f2299341c23ee97d48114a249f0361fe2ada7cbdc2a43bd2c064333883d6a9c": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import HttpUrlIntegration\n\n\nbooks_integration = HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\")\n\nhttp_api = apigwv2.HttpApi(self, \"HttpApi\")\n\nhttp_api.add_routes(\n    path=\"/books\",\n    methods=[apigwv2.HttpMethod.GET],\n    integration=books_integration\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\n\nHttpUrlIntegration booksIntegration = new HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\");\n\nHttpApi httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.AddRoutes(new AddRoutesOptions {\n    Path = \"/books\",\n    Methods = new [] { HttpMethod.GET },\n    Integration = booksIntegration\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpUrlIntegration;\n\n\nHttpUrlIntegration booksIntegration = new HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\");\n\nHttpApi httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.addRoutes(AddRoutesOptions.builder()\n        .path(\"/books\")\n        .methods(List.of(HttpMethod.GET))\n        .integration(booksIntegration)\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "import { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst booksIntegration = new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal');\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha"
        },
        "field": {
          "field": "markdown",
          "line": 68
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.AddRoutesOptions",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi#addRoutes",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod#GET",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpUrlIntegration"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst booksIntegration = new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal');\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 15,
        "104": 1,
        "192": 1,
        "193": 1,
        "194": 4,
        "196": 1,
        "197": 2,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "e6c2e1d88d4544f98797d67d7307da2eb3af52fd1610a6fc62a4033e5736f553"
    },
    "94fd520039818f42c437e28a02608f29433f9db8001f93d5357fb550f82bf6ad": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import HttpAlbIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nlb = elbv2.ApplicationLoadBalancer(self, \"lb\", vpc=vpc)\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nApplicationLoadBalancer lb = new ApplicationLoadBalancer(this, \"lb\", new ApplicationLoadBalancerProps { Vpc = vpc });\nApplicationListener listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpAlbIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nApplicationLoadBalancer lb = ApplicationLoadBalancer.Builder.create(this, \"lb\").vpc(vpc).build();\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(new HttpAlbIntegration(\"DefaultIntegration\", listener))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha"
        },
        "field": {
          "field": "markdown",
          "line": 94
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegration",
        "aws-cdk-lib.aws_ec2.IVpc",
        "aws-cdk-lib.aws_ec2.Vpc",
        "aws-cdk-lib.aws_elasticloadbalancingv2.AddApplicationTargetsProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener#addTargets",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancerProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.BaseApplicationListenerProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.IApplicationListener"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.ApplicationLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 3,
        "193": 4,
        "194": 5,
        "196": 2,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "669c204be7b5737d4f6872370c980d9721116aaa788a8129e0e2c9b67072b9f5"
    },
    "d567d03d9432ddd78d636462de9014ea6378d25261070b199c56c1708eac78f7": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import HttpNlbIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nlb = elbv2.NetworkLoadBalancer(self, \"lb\", vpc=vpc)\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpNlbIntegration(\"DefaultIntegration\", listener)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = new NetworkLoadBalancer(this, \"lb\", new NetworkLoadBalancerProps { Vpc = vpc });\nNetworkListener listener = lb.AddListener(\"listener\", new BaseNetworkListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddNetworkTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpNlbIntegration(\"DefaultIntegration\", listener)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpNlbIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = NetworkLoadBalancer.Builder.create(this, \"lb\").vpc(vpc).build();\nNetworkListener listener = lb.addListener(\"listener\", BaseNetworkListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddNetworkTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(new HttpNlbIntegration(\"DefaultIntegration\", listener))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha"
        },
        "field": {
          "field": "markdown",
          "line": 115
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpNlbIntegration",
        "aws-cdk-lib.aws_ec2.IVpc",
        "aws-cdk-lib.aws_ec2.Vpc",
        "aws-cdk-lib.aws_elasticloadbalancingv2.AddNetworkTargetsProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.BaseNetworkListenerProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.INetworkListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.NetworkListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.NetworkListener#addTargets",
        "aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer",
        "aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer#addListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 3,
        "193": 4,
        "194": 5,
        "196": 2,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "82a18716de2d324c145ffc904c832cf5f2212f9a49c9d95833c25253750f2d63"
    },
    "f332ebf6d8c7a1387af9fef3c98ee29a51d020bb47bab4e58e2a421801ff132e": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_servicediscovery as servicediscovery\nfrom aws_cdk.aws_apigatewayv2_integrations_alpha import HttpServiceDiscoveryIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nvpc_link = apigwv2.VpcLink(self, \"VpcLink\", vpc=vpc)\nnamespace = servicediscovery.PrivateDnsNamespace(self, \"Namespace\",\n    name=\"boobar.com\",\n    vpc=vpc\n)\nservice = namespace.create_service(\"Service\")\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpServiceDiscoveryIntegration(\"DefaultIntegration\", service,\n        vpc_link=vpc_link\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ServiceDiscovery;\nusing Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nVpcLink vpcLink = new VpcLink(this, \"VpcLink\", new VpcLinkProps { Vpc = vpc });\nPrivateDnsNamespace namespace = new PrivateDnsNamespace(this, \"Namespace\", new PrivateDnsNamespaceProps {\n    Name = \"boobar.com\",\n    Vpc = vpc\n});\nService service = namespace.CreateService(\"Service\");\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpServiceDiscoveryIntegration(\"DefaultIntegration\", service, new HttpServiceDiscoveryIntegrationProps {\n        VpcLink = vpcLink\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.servicediscovery.*;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpServiceDiscoveryIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nVpcLink vpcLink = VpcLink.Builder.create(this, \"VpcLink\").vpc(vpc).build();\nPrivateDnsNamespace namespace = PrivateDnsNamespace.Builder.create(this, \"Namespace\")\n        .name(\"boobar.com\")\n        .vpc(vpc)\n        .build();\nService service = namespace.createService(\"Service\");\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpServiceDiscoveryIntegration.Builder.create(\"DefaultIntegration\", service)\n                .vpcLink(vpcLink)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import * as servicediscovery from 'aws-cdk-lib/aws-servicediscovery';\nimport { HttpServiceDiscoveryIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\nconst namespace = new servicediscovery.PrivateDnsNamespace(this, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\nconst service = namespace.createService('Service');\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpServiceDiscoveryIntegration('DefaultIntegration', service, {\n    vpcLink,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha"
        },
        "field": {
          "field": "markdown",
          "line": 136
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink",
        "@aws-cdk/aws-apigatewayv2-alpha.VpcLink",
        "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkProps",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpServiceDiscoveryIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpServiceDiscoveryIntegrationProps",
        "aws-cdk-lib.aws_ec2.IVpc",
        "aws-cdk-lib.aws_ec2.Vpc",
        "aws-cdk-lib.aws_servicediscovery.IService",
        "aws-cdk-lib.aws_servicediscovery.PrivateDnsNamespace",
        "aws-cdk-lib.aws_servicediscovery.PrivateDnsNamespace#createService",
        "aws-cdk-lib.aws_servicediscovery.PrivateDnsNamespaceProps",
        "aws-cdk-lib.aws_servicediscovery.Service"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as servicediscovery from 'aws-cdk-lib/aws-servicediscovery';\nimport { HttpServiceDiscoveryIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\nconst namespace = new servicediscovery.PrivateDnsNamespace(this, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\nconst service = namespace.createService('Service');\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpServiceDiscoveryIntegration('DefaultIntegration', service, {\n    vpcLink,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 9,
        "75": 24,
        "104": 4,
        "193": 4,
        "194": 5,
        "196": 1,
        "197": 5,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 2,
        "255": 2,
        "256": 1,
        "257": 1,
        "258": 1,
        "281": 2,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "43ae9aef7e35f1526c1ee7fab645479d48af40a95007b927b21354ceafeeb4d6"
    },
    "1d5722d9a2975f4300a6bf29c53c529dcf2a2ff5d77c32a6eaad6ab812d9af61": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import HttpAlbIntegration\n\n# lb is of type ApplicationLoadBalancer\n\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener,\n        parameter_mapping=apigwv2.ParameterMapping().append_header(\"header2\", apigwv2.MappingValue.request_header(\"header1\")).remove_header(\"header1\")\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener, new HttpAlbIntegrationProps {\n        ParameterMapping = new ParameterMapping().AppendHeader(\"header2\", MappingValue.RequestHeader(\"header1\")).RemoveHeader(\"header1\")\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpAlbIntegration;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpAlbIntegration.Builder.create(\"DefaultIntegration\", listener)\n                .parameterMapping(new ParameterMapping().appendHeader(\"header2\", MappingValue.requestHeader(\"header1\")).removeHeader(\"header1\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha"
        },
        "field": {
          "field": "markdown",
          "line": 163
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-alpha.MappingValue",
        "@aws-cdk/aws-apigatewayv2-alpha.MappingValue#requestHeader",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#appendHeader",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#removeHeader",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegrationProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.AddApplicationTargetsProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener#addTargets",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.BaseApplicationListenerProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.IApplicationListener"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 8,
        "75": 25,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "194": 8,
        "196": 5,
        "197": 3,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "6563ae9f52e89407a4381f9020fd5c97d5c06f6b35eefb168102963f5607f7d3"
    },
    "ba4f8e20b0ee1f09e8f68732c23c2e949b872666368bdae3666e30b4a8b7f2e0": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import HttpAlbIntegration\n\n# lb is of type ApplicationLoadBalancer\n\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener,\n        parameter_mapping=apigwv2.ParameterMapping().custom(\"myKey\", \"myValue\")\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener, new HttpAlbIntegrationProps {\n        ParameterMapping = new ParameterMapping().Custom(\"myKey\", \"myValue\")\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpAlbIntegration;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpAlbIntegration.Builder.create(\"DefaultIntegration\", listener)\n                .parameterMapping(new ParameterMapping().custom(\"myKey\", \"myValue\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha"
        },
        "field": {
          "field": "markdown",
          "line": 183
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#custom",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegrationProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.AddApplicationTargetsProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener#addTargets",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.BaseApplicationListenerProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.IApplicationListener"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "194": 5,
        "196": 3,
        "197": 3,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "4934c3e9f35dd745e9fc2acbecb8e44f8ea82393c8261a6fdf2d7a753bf92f9e"
    },
    "176ce3b860f95174ba9131709b0a380a58c923464d1abd3e73657fa0306e190f": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import WebSocketLambdaIntegration\n\n# message_handler is of type Function\n\n\nweb_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\")\napigwv2.WebSocketStage(self, \"mystage\",\n    web_socket_api=web_socket_api,\n    stage_name=\"dev\",\n    auto_deploy=True\n)\nweb_socket_api.add_route(\"sendmessage\",\n    integration=WebSocketLambdaIntegration(\"SendMessageIntegration\", message_handler)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nFunction messageHandler;\n\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nnew WebSocketStage(this, \"mystage\", new WebSocketStageProps {\n    WebSocketApi = webSocketApi,\n    StageName = \"dev\",\n    AutoDeploy = true\n});\nwebSocketApi.AddRoute(\"sendmessage\", new WebSocketRouteOptions {\n    Integration = new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.WebSocketLambdaIntegration;\n\nFunction messageHandler;\n\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nWebSocketStage.Builder.create(this, \"mystage\")\n        .webSocketApi(webSocketApi)\n        .stageName(\"dev\")\n        .autoDeploy(true)\n        .build();\nwebSocketApi.addRoute(\"sendmessage\", WebSocketRouteOptions.builder()\n        .integration(new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler))\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha"
        },
        "field": {
          "field": "markdown",
          "line": 213
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApi",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApi#addRoute",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteOptions",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStage",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStageProps",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.WebSocketLambdaIntegration",
        "aws-cdk-lib.aws_lambda.IFunction"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const messageHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 17,
        "104": 2,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 3,
        "196": 1,
        "197": 3,
        "225": 2,
        "226": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "c2ef4d1c7e9fd3e3befd1b1ca1ab04a4b4c99b1128fbc2cf7030068b0d926336"
    },
    "565e03d687fed8547e39dc4b75565d1b60d9ad7b46ab515d4f3ff1ec4e8a341e": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import HttpAlbIntegration\n\n# lb is of type ApplicationLoadBalancer\n\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener,\n        parameter_mapping=apigwv2.ParameterMapping().custom(\"myKey\", \"myValue\")\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener, new HttpAlbIntegrationProps {\n        ParameterMapping = new ParameterMapping().Custom(\"myKey\", \"myValue\")\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpAlbIntegration;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpAlbIntegration.Builder.create(\"DefaultIntegration\", listener)\n                .parameterMapping(new ParameterMapping().custom(\"myKey\", \"myValue\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#custom",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegrationProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.AddApplicationTargetsProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener#addTargets",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.BaseApplicationListenerProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.IApplicationListener"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "194": 5,
        "196": 3,
        "197": 3,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "4934c3e9f35dd745e9fc2acbecb8e44f8ea82393c8261a6fdf2d7a753bf92f9e"
    },
    "df6e71758d9960594851282539244adb31182b6de812a9d6f34da50197a7480d": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import HttpAlbIntegration\n\n# lb is of type ApplicationLoadBalancer\n\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener,\n        parameter_mapping=apigwv2.ParameterMapping().append_header(\"header2\", apigwv2.MappingValue.request_header(\"header1\")).remove_header(\"header1\")\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener, new HttpAlbIntegrationProps {\n        ParameterMapping = new ParameterMapping().AppendHeader(\"header2\", MappingValue.RequestHeader(\"header1\")).RemoveHeader(\"header1\")\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpAlbIntegration;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpAlbIntegration.Builder.create(\"DefaultIntegration\", listener)\n                .parameterMapping(new ParameterMapping().appendHeader(\"header2\", MappingValue.requestHeader(\"header1\")).removeHeader(\"header1\"))\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegrationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-alpha.MappingValue",
        "@aws-cdk/aws-apigatewayv2-alpha.MappingValue#requestHeader",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#appendHeader",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping#removeHeader",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpAlbIntegrationProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.AddApplicationTargetsProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationListener#addTargets",
        "aws-cdk-lib.aws_elasticloadbalancingv2.ApplicationLoadBalancer#addListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.BaseApplicationListenerProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.IApplicationListener"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 8,
        "75": 25,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "194": 8,
        "196": 5,
        "197": 3,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "6563ae9f52e89407a4381f9020fd5c97d5c06f6b35eefb168102963f5607f7d3"
    },
    "06c9032719f9b864b867e000c83ba7d2fbe3c8271455206b9ab31a62101b951e": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import HttpLambdaIntegration\n\n# books_default_fn is of type Function\n\nbooks_integration = HttpLambdaIntegration(\"BooksIntegration\", books_default_fn)\n\nhttp_api = apigwv2.HttpApi(self, \"HttpApi\")\n\nhttp_api.add_routes(\n    path=\"/books\",\n    methods=[apigwv2.HttpMethod.GET],\n    integration=books_integration\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nFunction booksDefaultFn;\n\nHttpLambdaIntegration booksIntegration = new HttpLambdaIntegration(\"BooksIntegration\", booksDefaultFn);\n\nHttpApi httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.AddRoutes(new AddRoutesOptions {\n    Path = \"/books\",\n    Methods = new [] { HttpMethod.GET },\n    Integration = booksIntegration\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpLambdaIntegration;\n\nFunction booksDefaultFn;\n\nHttpLambdaIntegration booksIntegration = new HttpLambdaIntegration(\"BooksIntegration\", booksDefaultFn);\n\nHttpApi httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.addRoutes(AddRoutesOptions.builder()\n        .path(\"/books\")\n        .methods(List.of(HttpMethod.GET))\n        .integration(booksIntegration)\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "import { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const booksDefaultFn: lambda.Function;\nconst booksIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpLambdaIntegration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.AddRoutesOptions",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi#addRoutes",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod#GET",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpLambdaIntegration",
        "aws-cdk-lib.aws_lambda.IFunction"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const booksDefaultFn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst booksIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 19,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 4,
        "196": 1,
        "197": 2,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "71064f436092187a034383ae4244298b4535b7b015b1919f6f9144ab0022386e"
    },
    "e9460cbfc5299bc61d7f74e08ceb92714b1f7e2b0a70b5ef6900f2d3cff52807": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2_alpha as apigatewayv2_alpha\nimport aws_cdk.aws_apigatewayv2_integrations_alpha as apigatewayv2_integrations_alpha\n\n# parameter_mapping is of type ParameterMapping\n# payload_format_version is of type PayloadFormatVersion\n\nhttp_lambda_integration_props = apigatewayv2_integrations_alpha.HttpLambdaIntegrationProps(\n    parameter_mapping=parameter_mapping,\n    payload_format_version=payload_format_version\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Apigatewayv2.Alpha;\nusing Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nParameterMapping parameterMapping;\nPayloadFormatVersion payloadFormatVersion;\n\nHttpLambdaIntegrationProps httpLambdaIntegrationProps = new HttpLambdaIntegrationProps {\n    ParameterMapping = parameterMapping,\n    PayloadFormatVersion = payloadFormatVersion\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.alpha.*;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.alpha.*;\n\nParameterMapping parameterMapping;\nPayloadFormatVersion payloadFormatVersion;\n\nHttpLambdaIntegrationProps httpLambdaIntegrationProps = HttpLambdaIntegrationProps.builder()\n        .parameterMapping(parameterMapping)\n        .payloadFormatVersion(payloadFormatVersion)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as apigatewayv2_integrations_alpha from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2_alpha.PayloadFormatVersion;\nconst httpLambdaIntegrationProps: apigatewayv2_integrations_alpha.HttpLambdaIntegrationProps = {\n  parameterMapping: parameterMapping,\n  payloadFormatVersion: payloadFormatVersion,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpLambdaIntegrationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping",
        "@aws-cdk/aws-apigatewayv2-alpha.PayloadFormatVersion",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpLambdaIntegrationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as apigatewayv2_integrations_alpha from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2_alpha.PayloadFormatVersion;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpLambdaIntegrationProps: apigatewayv2_integrations_alpha.HttpLambdaIntegrationProps = {\n  parameterMapping: parameterMapping,\n  payloadFormatVersion: payloadFormatVersion,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 15,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "2ffb1ab55b78933dc75d42b94ee251387b4a6c0a78bd80695b0227ad83d0572a"
    },
    "6461b84c5310708422d670d9114378889ea5594ef7aa88311c5a0160fcaab1d6": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import HttpNlbIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nlb = elbv2.NetworkLoadBalancer(self, \"lb\", vpc=vpc)\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpNlbIntegration(\"DefaultIntegration\", listener)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = new NetworkLoadBalancer(this, \"lb\", new NetworkLoadBalancerProps { Vpc = vpc });\nNetworkListener listener = lb.AddListener(\"listener\", new BaseNetworkListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddNetworkTargetsProps {\n    Port = 80\n});\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpNlbIntegration(\"DefaultIntegration\", listener)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpNlbIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nNetworkLoadBalancer lb = NetworkLoadBalancer.Builder.create(this, \"lb\").vpc(vpc).build();\nNetworkListener listener = lb.addListener(\"listener\", BaseNetworkListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddNetworkTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(new HttpNlbIntegration(\"DefaultIntegration\", listener))\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpNlbIntegration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpNlbIntegration",
        "aws-cdk-lib.aws_ec2.IVpc",
        "aws-cdk-lib.aws_ec2.Vpc",
        "aws-cdk-lib.aws_elasticloadbalancingv2.AddNetworkTargetsProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.BaseNetworkListenerProps",
        "aws-cdk-lib.aws_elasticloadbalancingv2.INetworkListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.NetworkListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.NetworkListener#addTargets",
        "aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer",
        "aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancer#addListener",
        "aws-cdk-lib.aws_elasticloadbalancingv2.NetworkLoadBalancerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpNlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst lb = new elbv2.NetworkLoadBalancer(this, 'lb', { vpc });\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpNlbIntegration('DefaultIntegration', listener),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "8": 2,
        "10": 7,
        "75": 21,
        "104": 3,
        "193": 4,
        "194": 5,
        "196": 2,
        "197": 4,
        "225": 4,
        "226": 1,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "82a18716de2d324c145ffc904c832cf5f2212f9a49c9d95833c25253750f2d63"
    },
    "30cb4f6e66fc7f0385a46248823be9c700df2562e022bce81400f4bef766c38f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2_alpha as apigatewayv2_alpha\nimport aws_cdk.aws_apigatewayv2_integrations_alpha as apigatewayv2_integrations_alpha\n\n# parameter_mapping is of type ParameterMapping\n# vpc_link is of type VpcLink\n\nhttp_nlb_integration_props = apigatewayv2_integrations_alpha.HttpNlbIntegrationProps(\n    method=apigatewayv2_alpha.HttpMethod.ANY,\n    parameter_mapping=parameter_mapping,\n    secure_server_name=\"secureServerName\",\n    vpc_link=vpc_link\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Apigatewayv2.Alpha;\nusing Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nParameterMapping parameterMapping;\nVpcLink vpcLink;\n\nHttpNlbIntegrationProps httpNlbIntegrationProps = new HttpNlbIntegrationProps {\n    Method = HttpMethod.ANY,\n    ParameterMapping = parameterMapping,\n    SecureServerName = \"secureServerName\",\n    VpcLink = vpcLink\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.alpha.*;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.alpha.*;\n\nParameterMapping parameterMapping;\nVpcLink vpcLink;\n\nHttpNlbIntegrationProps httpNlbIntegrationProps = HttpNlbIntegrationProps.builder()\n        .method(HttpMethod.ANY)\n        .parameterMapping(parameterMapping)\n        .secureServerName(\"secureServerName\")\n        .vpcLink(vpcLink)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as apigatewayv2_integrations_alpha from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\ndeclare const vpcLink: apigatewayv2_alpha.VpcLink;\nconst httpNlbIntegrationProps: apigatewayv2_integrations_alpha.HttpNlbIntegrationProps = {\n  method: apigatewayv2_alpha.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  secureServerName: 'secureServerName',\n  vpcLink: vpcLink,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpNlbIntegrationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod#ANY",
        "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpNlbIntegrationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as apigatewayv2_integrations_alpha from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\ndeclare const vpcLink: apigatewayv2_alpha.VpcLink;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpNlbIntegrationProps: apigatewayv2_integrations_alpha.HttpNlbIntegrationProps = {\n  method: apigatewayv2_alpha.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  secureServerName: 'secureServerName',\n  vpcLink: vpcLink,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 20,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "194": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "4d3d32a3263de88dcc6e58cb0b72c5d5f05154126b0efd677ce6322a8d7e6c63"
    },
    "ef96ffa7311929fa5aff1733433133eb472d28b7d77a2abc6675a1305a714456": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2_alpha as apigatewayv2_alpha\nimport aws_cdk.aws_apigatewayv2_integrations_alpha as apigatewayv2_integrations_alpha\n\n# parameter_mapping is of type ParameterMapping\n# vpc_link is of type VpcLink\n\nhttp_private_integration_options = apigatewayv2_integrations_alpha.HttpPrivateIntegrationOptions(\n    method=apigatewayv2_alpha.HttpMethod.ANY,\n    parameter_mapping=parameter_mapping,\n    secure_server_name=\"secureServerName\",\n    vpc_link=vpc_link\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Apigatewayv2.Alpha;\nusing Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nParameterMapping parameterMapping;\nVpcLink vpcLink;\n\nHttpPrivateIntegrationOptions httpPrivateIntegrationOptions = new HttpPrivateIntegrationOptions {\n    Method = HttpMethod.ANY,\n    ParameterMapping = parameterMapping,\n    SecureServerName = \"secureServerName\",\n    VpcLink = vpcLink\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.alpha.*;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.alpha.*;\n\nParameterMapping parameterMapping;\nVpcLink vpcLink;\n\nHttpPrivateIntegrationOptions httpPrivateIntegrationOptions = HttpPrivateIntegrationOptions.builder()\n        .method(HttpMethod.ANY)\n        .parameterMapping(parameterMapping)\n        .secureServerName(\"secureServerName\")\n        .vpcLink(vpcLink)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as apigatewayv2_integrations_alpha from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\ndeclare const vpcLink: apigatewayv2_alpha.VpcLink;\nconst httpPrivateIntegrationOptions: apigatewayv2_integrations_alpha.HttpPrivateIntegrationOptions = {\n  method: apigatewayv2_alpha.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  secureServerName: 'secureServerName',\n  vpcLink: vpcLink,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpPrivateIntegrationOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod#ANY",
        "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpPrivateIntegrationOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as apigatewayv2_integrations_alpha from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\ndeclare const vpcLink: apigatewayv2_alpha.VpcLink;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpPrivateIntegrationOptions: apigatewayv2_integrations_alpha.HttpPrivateIntegrationOptions = {\n  method: apigatewayv2_alpha.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  secureServerName: 'secureServerName',\n  vpcLink: vpcLink,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 20,
        "130": 2,
        "153": 3,
        "169": 3,
        "193": 1,
        "194": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "e21da0ca099bbaf93d9d7470aa22683229d97033ad1f610ca7c1d5cf59cce739"
    },
    "009b4a789939a0001f5fdc25245e289bd3dbb6b70580c959c2c249380f5a65c7": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_servicediscovery as servicediscovery\nfrom aws_cdk.aws_apigatewayv2_integrations_alpha import HttpServiceDiscoveryIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nvpc_link = apigwv2.VpcLink(self, \"VpcLink\", vpc=vpc)\nnamespace = servicediscovery.PrivateDnsNamespace(self, \"Namespace\",\n    name=\"boobar.com\",\n    vpc=vpc\n)\nservice = namespace.create_service(\"Service\")\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpServiceDiscoveryIntegration(\"DefaultIntegration\", service,\n        vpc_link=vpc_link\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ServiceDiscovery;\nusing Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nVpcLink vpcLink = new VpcLink(this, \"VpcLink\", new VpcLinkProps { Vpc = vpc });\nPrivateDnsNamespace namespace = new PrivateDnsNamespace(this, \"Namespace\", new PrivateDnsNamespaceProps {\n    Name = \"boobar.com\",\n    Vpc = vpc\n});\nService service = namespace.CreateService(\"Service\");\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpServiceDiscoveryIntegration(\"DefaultIntegration\", service, new HttpServiceDiscoveryIntegrationProps {\n        VpcLink = vpcLink\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.servicediscovery.*;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpServiceDiscoveryIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nVpcLink vpcLink = VpcLink.Builder.create(this, \"VpcLink\").vpc(vpc).build();\nPrivateDnsNamespace namespace = PrivateDnsNamespace.Builder.create(this, \"Namespace\")\n        .name(\"boobar.com\")\n        .vpc(vpc)\n        .build();\nService service = namespace.createService(\"Service\");\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpServiceDiscoveryIntegration.Builder.create(\"DefaultIntegration\", service)\n                .vpcLink(vpcLink)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import * as servicediscovery from 'aws-cdk-lib/aws-servicediscovery';\nimport { HttpServiceDiscoveryIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\nconst namespace = new servicediscovery.PrivateDnsNamespace(this, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\nconst service = namespace.createService('Service');\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpServiceDiscoveryIntegration('DefaultIntegration', service, {\n    vpcLink,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpServiceDiscoveryIntegration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink",
        "@aws-cdk/aws-apigatewayv2-alpha.VpcLink",
        "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkProps",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpServiceDiscoveryIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpServiceDiscoveryIntegrationProps",
        "aws-cdk-lib.aws_ec2.IVpc",
        "aws-cdk-lib.aws_ec2.Vpc",
        "aws-cdk-lib.aws_servicediscovery.IService",
        "aws-cdk-lib.aws_servicediscovery.PrivateDnsNamespace",
        "aws-cdk-lib.aws_servicediscovery.PrivateDnsNamespace#createService",
        "aws-cdk-lib.aws_servicediscovery.PrivateDnsNamespaceProps",
        "aws-cdk-lib.aws_servicediscovery.Service"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as servicediscovery from 'aws-cdk-lib/aws-servicediscovery';\nimport { HttpServiceDiscoveryIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\nconst namespace = new servicediscovery.PrivateDnsNamespace(this, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\nconst service = namespace.createService('Service');\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpServiceDiscoveryIntegration('DefaultIntegration', service, {\n    vpcLink,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 9,
        "75": 24,
        "104": 4,
        "193": 4,
        "194": 5,
        "196": 1,
        "197": 5,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 2,
        "255": 2,
        "256": 1,
        "257": 1,
        "258": 1,
        "281": 2,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "43ae9aef7e35f1526c1ee7fab645479d48af40a95007b927b21354ceafeeb4d6"
    },
    "f0578f5139d7b25d667bfdb0e39eab7e8a271ddc037b03e7fd5c3e3499da0951": {
      "translations": {
        "python": {
          "source": "import aws_cdk.aws_servicediscovery as servicediscovery\nfrom aws_cdk.aws_apigatewayv2_integrations_alpha import HttpServiceDiscoveryIntegration\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nvpc_link = apigwv2.VpcLink(self, \"VpcLink\", vpc=vpc)\nnamespace = servicediscovery.PrivateDnsNamespace(self, \"Namespace\",\n    name=\"boobar.com\",\n    vpc=vpc\n)\nservice = namespace.create_service(\"Service\")\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpServiceDiscoveryIntegration(\"DefaultIntegration\", service,\n        vpc_link=vpc_link\n    )\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.ServiceDiscovery;\nusing Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nVpcLink vpcLink = new VpcLink(this, \"VpcLink\", new VpcLinkProps { Vpc = vpc });\nPrivateDnsNamespace namespace = new PrivateDnsNamespace(this, \"Namespace\", new PrivateDnsNamespaceProps {\n    Name = \"boobar.com\",\n    Vpc = vpc\n});\nService service = namespace.CreateService(\"Service\");\n\nHttpApi httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpServiceDiscoveryIntegration(\"DefaultIntegration\", service, new HttpServiceDiscoveryIntegrationProps {\n        VpcLink = vpcLink\n    })\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.servicediscovery.*;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpServiceDiscoveryIntegration;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nVpcLink vpcLink = VpcLink.Builder.create(this, \"VpcLink\").vpc(vpc).build();\nPrivateDnsNamespace namespace = PrivateDnsNamespace.Builder.create(this, \"Namespace\")\n        .name(\"boobar.com\")\n        .vpc(vpc)\n        .build();\nService service = namespace.createService(\"Service\");\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpServiceDiscoveryIntegration.Builder.create(\"DefaultIntegration\", service)\n                .vpcLink(vpcLink)\n                .build())\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "import * as servicediscovery from 'aws-cdk-lib/aws-servicediscovery';\nimport { HttpServiceDiscoveryIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\nconst namespace = new servicediscovery.PrivateDnsNamespace(this, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\nconst service = namespace.createService('Service');\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpServiceDiscoveryIntegration('DefaultIntegration', service, {\n    vpcLink,\n  }),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpServiceDiscoveryIntegrationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApiProps",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-alpha.IVpcLink",
        "@aws-cdk/aws-apigatewayv2-alpha.VpcLink",
        "@aws-cdk/aws-apigatewayv2-alpha.VpcLinkProps",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpServiceDiscoveryIntegration",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpServiceDiscoveryIntegrationProps",
        "aws-cdk-lib.aws_ec2.IVpc",
        "aws-cdk-lib.aws_ec2.Vpc",
        "aws-cdk-lib.aws_servicediscovery.IService",
        "aws-cdk-lib.aws_servicediscovery.PrivateDnsNamespace",
        "aws-cdk-lib.aws_servicediscovery.PrivateDnsNamespace#createService",
        "aws-cdk-lib.aws_servicediscovery.PrivateDnsNamespaceProps",
        "aws-cdk-lib.aws_servicediscovery.Service"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport * as servicediscovery from 'aws-cdk-lib/aws-servicediscovery';\nimport { HttpServiceDiscoveryIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\nconst namespace = new servicediscovery.PrivateDnsNamespace(this, 'Namespace', {\n  name: 'boobar.com',\n  vpc,\n});\nconst service = namespace.createService('Service');\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpServiceDiscoveryIntegration('DefaultIntegration', service, {\n    vpcLink,\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 9,
        "75": 24,
        "104": 4,
        "193": 4,
        "194": 5,
        "196": 1,
        "197": 5,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 2,
        "255": 2,
        "256": 1,
        "257": 1,
        "258": 1,
        "281": 2,
        "282": 3,
        "290": 1
      },
      "fqnsFingerprint": "43ae9aef7e35f1526c1ee7fab645479d48af40a95007b927b21354ceafeeb4d6"
    },
    "9e9a3f74cc1bb0f0c4142ecb4bbca34df6ca34969d1b07e37a1d77d3eba02fcd": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_authorizers_alpha import HttpLambdaAuthorizer, HttpLambdaResponseType\nfrom aws_cdk.aws_apigatewayv2_integrations_alpha import HttpUrlIntegration\n\n# This function handles your auth logic\n# auth_handler is of type Function\n\n\nauthorizer = HttpLambdaAuthorizer(\"BooksAuthorizer\", auth_handler,\n    response_types=[HttpLambdaResponseType.SIMPLE]\n)\n\napi = apigwv2.HttpApi(self, \"HttpApi\")\n\napi.add_routes(\n    integration=HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    path=\"/books\",\n    authorizer=authorizer\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Authorizers.Alpha;\nusing Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\n// This function handles your auth logic\nFunction authHandler;\n\n\nHttpLambdaAuthorizer authorizer = new HttpLambdaAuthorizer(\"BooksAuthorizer\", authHandler, new HttpLambdaAuthorizerProps {\n    ResponseTypes = new [] { HttpLambdaResponseType.SIMPLE }\n});\n\nHttpApi api = new HttpApi(this, \"HttpApi\");\n\napi.AddRoutes(new AddRoutesOptions {\n    Integration = new HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    Path = \"/books\",\n    Authorizer = authorizer\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.authorizers.alpha.HttpLambdaAuthorizer;\nimport software.amazon.awscdk.services.apigatewayv2.authorizers.alpha.HttpLambdaResponseType;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.alpha.HttpUrlIntegration;\n\n// This function handles your auth logic\nFunction authHandler;\n\n\nHttpLambdaAuthorizer authorizer = HttpLambdaAuthorizer.Builder.create(\"BooksAuthorizer\", authHandler)\n        .responseTypes(List.of(HttpLambdaResponseType.SIMPLE))\n        .build();\n\nHttpApi api = new HttpApi(this, \"HttpApi\");\n\napi.addRoutes(AddRoutesOptions.builder()\n        .integration(new HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"))\n        .path(\"/books\")\n        .authorizer(authorizer)\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "import { HttpLambdaAuthorizer, HttpLambdaResponseType } from '@aws-cdk/aws-apigatewayv2-authorizers-alpha';\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\n// This function handles your auth logic\ndeclare const authHandler: lambda.Function;\n\nconst authorizer = new HttpLambdaAuthorizer('BooksAuthorizer', authHandler, {\n  responseTypes: [HttpLambdaResponseType.SIMPLE], // Define if returns simple and/or iam response\n});\n\nconst api = new apigwv2.HttpApi(this, 'HttpApi');\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  authorizer,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpUrlIntegration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.AddRoutesOptions",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpApi#addRoutes",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-alpha.IHttpRouteAuthorizer",
        "@aws-cdk/aws-apigatewayv2-authorizers-alpha.HttpLambdaAuthorizer",
        "@aws-cdk/aws-apigatewayv2-authorizers-alpha.HttpLambdaAuthorizerProps",
        "@aws-cdk/aws-apigatewayv2-authorizers-alpha.HttpLambdaResponseType#SIMPLE",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpUrlIntegration",
        "aws-cdk-lib.aws_lambda.IFunction"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpLambdaAuthorizer, HttpLambdaResponseType } from '@aws-cdk/aws-apigatewayv2-authorizers-alpha';\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\n// This function handles your auth logic\ndeclare const authHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as iam from 'aws-cdk-lib/aws-iam';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst authorizer = new HttpLambdaAuthorizer('BooksAuthorizer', authHandler, {\n  responseTypes: [HttpLambdaResponseType.SIMPLE], // Define if returns simple and/or iam response\n});\n\nconst api = new apigwv2.HttpApi(this, 'HttpApi');\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  authorizer,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 21,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 3,
        "196": 1,
        "197": 3,
        "225": 3,
        "226": 1,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "257": 2,
        "258": 3,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "50d21d4ec8fb226d317626f4b25383870fcf15f43a837eeefe2412b997763f90"
    },
    "fbd1a0b3a31348a6be290748dcf2809993f7338004fdf24c2fda2124abf5ee99": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2_alpha as apigatewayv2_alpha\nimport aws_cdk.aws_apigatewayv2_integrations_alpha as apigatewayv2_integrations_alpha\n\n# parameter_mapping is of type ParameterMapping\n\nhttp_url_integration_props = apigatewayv2_integrations_alpha.HttpUrlIntegrationProps(\n    method=apigatewayv2_alpha.HttpMethod.ANY,\n    parameter_mapping=parameter_mapping\n)",
          "version": "1"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Apigatewayv2.Alpha;\nusing Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nParameterMapping parameterMapping;\n\nHttpUrlIntegrationProps httpUrlIntegrationProps = new HttpUrlIntegrationProps {\n    Method = HttpMethod.ANY,\n    ParameterMapping = parameterMapping\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.alpha.*;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.alpha.*;\n\nParameterMapping parameterMapping;\n\nHttpUrlIntegrationProps httpUrlIntegrationProps = HttpUrlIntegrationProps.builder()\n        .method(HttpMethod.ANY)\n        .parameterMapping(parameterMapping)\n        .build();",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as apigatewayv2_integrations_alpha from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\nconst httpUrlIntegrationProps: apigatewayv2_integrations_alpha.HttpUrlIntegrationProps = {\n  method: apigatewayv2_alpha.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpUrlIntegrationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod",
        "@aws-cdk/aws-apigatewayv2-alpha.HttpMethod#ANY",
        "@aws-cdk/aws-apigatewayv2-alpha.ParameterMapping",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.HttpUrlIntegrationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2_alpha from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as apigatewayv2_integrations_alpha from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const parameterMapping: apigatewayv2_alpha.ParameterMapping;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"constructs\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpUrlIntegrationProps: apigatewayv2_integrations_alpha.HttpUrlIntegrationProps = {\n  method: apigatewayv2_alpha.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 14,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "194": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "abda956518281ffe1f5b979fc6fe025c8b3b8ae6f1519880d58df2cd63c6d116"
    },
    "e961777ea5f2a8335f5700f7ec0787900bfd2d59fb7e9aa7e5d208ab5354d971": {
      "translations": {
        "python": {
          "source": "from aws_cdk.aws_apigatewayv2_integrations_alpha import WebSocketLambdaIntegration\n\n# message_handler is of type Function\n\n\nweb_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\")\napigwv2.WebSocketStage(self, \"mystage\",\n    web_socket_api=web_socket_api,\n    stage_name=\"dev\",\n    auto_deploy=True\n)\nweb_socket_api.add_route(\"sendmessage\",\n    integration=WebSocketLambdaIntegration(\"SendMessageIntegration\", message_handler)\n)",
          "version": "1"
        },
        "csharp": {
          "source": "using Amazon.CDK.AWS.Apigatewayv2.Integrations.Alpha;\n\nFunction messageHandler;\n\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nnew WebSocketStage(this, \"mystage\", new WebSocketStageProps {\n    WebSocketApi = webSocketApi,\n    StageName = \"dev\",\n    AutoDeploy = true\n});\nwebSocketApi.AddRoute(\"sendmessage\", new WebSocketRouteOptions {\n    Integration = new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler)\n});",
          "version": "1"
        },
        "java": {
          "source": "import software.amazon.awscdk.services.apigatewayv2.integrations.alpha.WebSocketLambdaIntegration;\n\nFunction messageHandler;\n\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nWebSocketStage.Builder.create(this, \"mystage\")\n        .webSocketApi(webSocketApi)\n        .stageName(\"dev\")\n        .autoDeploy(true)\n        .build();\nwebSocketApi.addRoute(\"sendmessage\", WebSocketRouteOptions.builder()\n        .integration(new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler))\n        .build());",
          "version": "1"
        },
        "$": {
          "source": "import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-apigatewayv2-integrations-alpha.WebSocketLambdaIntegration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-apigatewayv2-alpha.IWebSocketApi",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApi",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketApi#addRoute",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteIntegration",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketRouteOptions",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStage",
        "@aws-cdk/aws-apigatewayv2-alpha.WebSocketStageProps",
        "@aws-cdk/aws-apigatewayv2-integrations-alpha.WebSocketLambdaIntegration",
        "aws-cdk-lib.aws_lambda.IFunction"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations-alpha';\n\ndeclare const messageHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from 'aws-cdk-lib';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2-alpha';\nimport * as ec2 from 'aws-cdk-lib/aws-ec2';\nimport * as elbv2 from 'aws-cdk-lib/aws-elasticloadbalancingv2';\nimport * as lambda from 'aws-cdk-lib/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 6,
        "75": 17,
        "104": 2,
        "106": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 3,
        "196": 1,
        "197": 3,
        "225": 2,
        "226": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "257": 1,
        "258": 1,
        "281": 3,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "c2ef4d1c7e9fd3e3befd1b1ca1ab04a4b4c99b1128fbc2cf7030068b0d926336"
    }
  }
}
