"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphQLApi = void 0;
const ApolloApi_1 = require("./ApolloApi");
const App_1 = require("./App");
const cross_spawn_1 = __importDefault(require("cross-spawn"));
const Api_1 = require("./Api");
class GraphQLApi extends ApolloApi_1.ApolloApi {
    constructor(scope, id, props) {
        if (props.codegen) {
            const app = App_1.App.of(scope);
            if (!app.local) {
                const result = cross_spawn_1.default.sync("npx", ["graphql-codegen", "-c", props.codegen], {
                    stdio: "inherit",
                });
                if (result.status !== 0) {
                    throw new Error(`Failed to generate the schema for the "${id}" ApolloApi`);
                }
            }
        }
        super(scope, id, Object.assign(Object.assign({}, props), { defaultPayloadFormatVersion: Api_1.ApiPayloadFormatVersion.V2 }));
        this.codegen = props.codegen;
    }
    getConstructMetadata() {
        const parent = super.getConstructMetadata();
        return Object.assign(Object.assign({}, parent), { local: {
                codegen: this.codegen,
            } });
    }
}
exports.GraphQLApi = GraphQLApi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3JhcGhRTEFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9HcmFwaFFMQXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLDJDQUF3RDtBQUN4RCwrQkFBNEI7QUFDNUIsOERBQWdDO0FBRWhDLCtCQUFnRDtBQVNoRCxNQUFhLFVBQVcsU0FBUSxxQkFBUztJQUd2QyxZQUFZLEtBQWdCLEVBQUUsRUFBVSxFQUFFLEtBQXNCO1FBQzlELElBQUksS0FBSyxDQUFDLE9BQU8sRUFBRTtZQUNqQixNQUFNLEdBQUcsR0FBRyxTQUFHLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBUSxDQUFDO1lBQ2pDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFO2dCQUNkLE1BQU0sTUFBTSxHQUFHLHFCQUFLLENBQUMsSUFBSSxDQUN2QixLQUFLLEVBQ0wsQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUN4QztvQkFDRSxLQUFLLEVBQUUsU0FBUztpQkFDakIsQ0FDRixDQUFDO2dCQUNGLElBQUksTUFBTSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7b0JBQ3ZCLE1BQU0sSUFBSSxLQUFLLENBQ2IsMENBQTBDLEVBQUUsYUFBYSxDQUMxRCxDQUFDO2lCQUNIO2FBQ0Y7U0FDRjtRQUNELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxrQ0FDVixLQUFLLEtBQ1IsMkJBQTJCLEVBQUUsNkJBQXVCLENBQUMsRUFBRSxJQUN2RCxDQUFDO1FBQ0gsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDO0lBQy9CLENBQUM7SUFFTSxvQkFBb0I7UUFDekIsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLG9CQUFvQixFQUFFLENBQUM7UUFDNUMsdUNBQ0ssTUFBTSxLQUNULEtBQUssRUFBRTtnQkFDTCxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU87YUFDdEIsSUFDRDtJQUNKLENBQUM7Q0FDRjtBQXJDRCxnQ0FxQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcG9sbG9BcGksIEFwb2xsb0FwaVByb3BzIH0gZnJvbSBcIi4vQXBvbGxvQXBpXCI7XG5pbXBvcnQgeyBBcHAgfSBmcm9tIFwiLi9BcHBcIjtcbmltcG9ydCBzcGF3biBmcm9tIFwiY3Jvc3Mtc3Bhd25cIjtcbmltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gXCJjb25zdHJ1Y3RzXCI7XG5pbXBvcnQgeyBBcGlQYXlsb2FkRm9ybWF0VmVyc2lvbiB9IGZyb20gXCIuL0FwaVwiO1xuXG5leHBvcnQgdHlwZSBHcmFwaFFMQXBpUHJvcHMgPSBBcG9sbG9BcGlQcm9wcyAmIHtcbiAgLyoqXG4gICAqIFBhdGggdG8gZ3JhcGhxbC1jb2RlZ2VuIGNvbmZpZ3VyYXRpb24gZmlsZVxuICAgKi9cbiAgY29kZWdlbj86IHN0cmluZztcbn07XG5cbmV4cG9ydCBjbGFzcyBHcmFwaFFMQXBpIGV4dGVuZHMgQXBvbGxvQXBpIHtcbiAgcHJpdmF0ZSByZWFkb25seSBjb2RlZ2VuPzogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBHcmFwaFFMQXBpUHJvcHMpIHtcbiAgICBpZiAocHJvcHMuY29kZWdlbikge1xuICAgICAgY29uc3QgYXBwID0gQXBwLm9mKHNjb3BlKSBhcyBBcHA7XG4gICAgICBpZiAoIWFwcC5sb2NhbCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzcGF3bi5zeW5jKFxuICAgICAgICAgIFwibnB4XCIsXG4gICAgICAgICAgW1wiZ3JhcGhxbC1jb2RlZ2VuXCIsIFwiLWNcIiwgcHJvcHMuY29kZWdlbl0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgc3RkaW86IFwiaW5oZXJpdFwiLFxuICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgaWYgKHJlc3VsdC5zdGF0dXMgIT09IDApIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICBgRmFpbGVkIHRvIGdlbmVyYXRlIHRoZSBzY2hlbWEgZm9yIHRoZSBcIiR7aWR9XCIgQXBvbGxvQXBpYFxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgc3VwZXIoc2NvcGUsIGlkLCB7XG4gICAgICAuLi5wcm9wcyxcbiAgICAgIGRlZmF1bHRQYXlsb2FkRm9ybWF0VmVyc2lvbjogQXBpUGF5bG9hZEZvcm1hdFZlcnNpb24uVjIsXG4gICAgfSk7XG4gICAgdGhpcy5jb2RlZ2VuID0gcHJvcHMuY29kZWdlbjtcbiAgfVxuXG4gIHB1YmxpYyBnZXRDb25zdHJ1Y3RNZXRhZGF0YSgpIHtcbiAgICBjb25zdCBwYXJlbnQgPSBzdXBlci5nZXRDb25zdHJ1Y3RNZXRhZGF0YSgpO1xuICAgIHJldHVybiB7XG4gICAgICAuLi5wYXJlbnQsXG4gICAgICBsb2NhbDoge1xuICAgICAgICBjb2RlZ2VuOiB0aGlzLmNvZGVnZW4sXG4gICAgICB9LFxuICAgIH07XG4gIH1cbn1cbiJdfQ==