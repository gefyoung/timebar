"use strict";
/* eslint-disable @typescript-eslint/ban-ts-comment*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.isConstruct = exports.isConstructOf = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
function isConstructOf(construct, moduleName) {
    var _a, _b;
    // We need to check if construct is an CDK construct. To do that:
    // - we cannot use the `construct instanceof` check because ie. the PolicyStatement
    //   instance in the user's app might come from a different npm package version
    // - we cannot use the `construct.constructor.name` check because the constructor
    //   name can be prefixed with a number ie. PolicyStatement2
    //
    // Therefore we are going to get the constructor's fqn. The constructor for a CDK
    // construct looks like:
    //    [class Bucket2 extends BucketBase] {
    //      [Symbol(jsii.rtti)]: { fqn: '@aws-cdk/aws-s3.Bucket', version: '1.91.0' }
    //    }
    // We will check against `fqn`.
    let cdkModule;
    // @ts-expect-error TS7053: Element implicitly has an 'any' type because expression of type 'unique symbol' can't be used to index type 'Function'.
    const fqn = (_b = (_a = construct === null || construct === void 0 ? void 0 : construct.constructor) === null || _a === void 0 ? void 0 : _a[JSII_RTTI_SYMBOL_1]) === null || _b === void 0 ? void 0 : _b.fqn;
    if (typeof fqn === "string" && fqn.startsWith("@aws-cdk/")) {
        cdkModule = fqn.substring(9);
    }
    return cdkModule === moduleName;
}
exports.isConstructOf = isConstructOf;
function isConstruct(construct) {
    var _a, _b;
    // @ts-expect-error TS7053: Element implicitly has an 'any' type because expression of type 'unique symbol' can't be used to index type 'Function'.
    const fqn = (_b = (_a = construct === null || construct === void 0 ? void 0 : construct.constructor) === null || _a === void 0 ? void 0 : _a[JSII_RTTI_SYMBOL_1]) === null || _b === void 0 ? void 0 : _b.fqn;
    return typeof fqn === "string" && fqn.startsWith("@aws-cdk/");
}
exports.isConstruct = isConstruct;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RydWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvY29uc3RydWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxxREFBcUQ7OztBQUlyRCxNQUFNLGtCQUFrQixHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7QUFFbkQsU0FBZ0IsYUFBYSxDQUMzQixTQUF3QixFQUN4QixVQUFrQjs7SUFFbEIsaUVBQWlFO0lBQ2pFLG1GQUFtRjtJQUNuRiwrRUFBK0U7SUFDL0UsaUZBQWlGO0lBQ2pGLDREQUE0RDtJQUM1RCxFQUFFO0lBQ0YsaUZBQWlGO0lBQ2pGLHdCQUF3QjtJQUN4QiwwQ0FBMEM7SUFDMUMsaUZBQWlGO0lBQ2pGLE9BQU87SUFDUCwrQkFBK0I7SUFDL0IsSUFBSSxTQUFTLENBQUM7SUFDZCxtSkFBbUo7SUFDbkosTUFBTSxHQUFHLEdBQUcsTUFBQSxNQUFBLFNBQVMsYUFBVCxTQUFTLHVCQUFULFNBQVMsQ0FBRSxXQUFXLDBDQUFHLGtCQUFrQixDQUFDLDBDQUFFLEdBQUcsQ0FBQztJQUM5RCxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxFQUFFO1FBQzFELFNBQVMsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzlCO0lBRUQsT0FBTyxTQUFTLEtBQUssVUFBVSxDQUFDO0FBQ2xDLENBQUM7QUF4QkQsc0NBd0JDO0FBRUQsU0FBZ0IsV0FBVyxDQUFDLFNBQXdCOztJQUNsRCxtSkFBbUo7SUFDbkosTUFBTSxHQUFHLEdBQUcsTUFBQSxNQUFBLFNBQVMsYUFBVCxTQUFTLHVCQUFULFNBQVMsQ0FBRSxXQUFXLDBDQUFHLGtCQUFrQixDQUFDLDBDQUFFLEdBQUcsQ0FBQztJQUM5RCxPQUFPLE9BQU8sR0FBRyxLQUFLLFFBQVEsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ2hFLENBQUM7QUFKRCxrQ0FJQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHMtY29tbWVudCovXG5cbmltcG9ydCAqIGFzIGNkayBmcm9tIFwiQGF3cy1jZGsvY29yZVwiO1xuXG5jb25zdCBKU0lJX1JUVElfU1lNQk9MXzEgPSBTeW1ib2wuZm9yKFwianNpaS5ydHRpXCIpO1xuXG5leHBvcnQgZnVuY3Rpb24gaXNDb25zdHJ1Y3RPZihcbiAgY29uc3RydWN0OiBjZGsuQ29uc3RydWN0LFxuICBtb2R1bGVOYW1lOiBzdHJpbmdcbik6IGJvb2xlYW4ge1xuICAvLyBXZSBuZWVkIHRvIGNoZWNrIGlmIGNvbnN0cnVjdCBpcyBhbiBDREsgY29uc3RydWN0LiBUbyBkbyB0aGF0OlxuICAvLyAtIHdlIGNhbm5vdCB1c2UgdGhlIGBjb25zdHJ1Y3QgaW5zdGFuY2VvZmAgY2hlY2sgYmVjYXVzZSBpZS4gdGhlIFBvbGljeVN0YXRlbWVudFxuICAvLyAgIGluc3RhbmNlIGluIHRoZSB1c2VyJ3MgYXBwIG1pZ2h0IGNvbWUgZnJvbSBhIGRpZmZlcmVudCBucG0gcGFja2FnZSB2ZXJzaW9uXG4gIC8vIC0gd2UgY2Fubm90IHVzZSB0aGUgYGNvbnN0cnVjdC5jb25zdHJ1Y3Rvci5uYW1lYCBjaGVjayBiZWNhdXNlIHRoZSBjb25zdHJ1Y3RvclxuICAvLyAgIG5hbWUgY2FuIGJlIHByZWZpeGVkIHdpdGggYSBudW1iZXIgaWUuIFBvbGljeVN0YXRlbWVudDJcbiAgLy9cbiAgLy8gVGhlcmVmb3JlIHdlIGFyZSBnb2luZyB0byBnZXQgdGhlIGNvbnN0cnVjdG9yJ3MgZnFuLiBUaGUgY29uc3RydWN0b3IgZm9yIGEgQ0RLXG4gIC8vIGNvbnN0cnVjdCBsb29rcyBsaWtlOlxuICAvLyAgICBbY2xhc3MgQnVja2V0MiBleHRlbmRzIEJ1Y2tldEJhc2VdIHtcbiAgLy8gICAgICBbU3ltYm9sKGpzaWkucnR0aSldOiB7IGZxbjogJ0Bhd3MtY2RrL2F3cy1zMy5CdWNrZXQnLCB2ZXJzaW9uOiAnMS45MS4wJyB9XG4gIC8vICAgIH1cbiAgLy8gV2Ugd2lsbCBjaGVjayBhZ2FpbnN0IGBmcW5gLlxuICBsZXQgY2RrTW9kdWxlO1xuICAvLyBAdHMtZXhwZWN0LWVycm9yIFRTNzA1MzogRWxlbWVudCBpbXBsaWNpdGx5IGhhcyBhbiAnYW55JyB0eXBlIGJlY2F1c2UgZXhwcmVzc2lvbiBvZiB0eXBlICd1bmlxdWUgc3ltYm9sJyBjYW4ndCBiZSB1c2VkIHRvIGluZGV4IHR5cGUgJ0Z1bmN0aW9uJy5cbiAgY29uc3QgZnFuID0gY29uc3RydWN0Py5jb25zdHJ1Y3Rvcj8uW0pTSUlfUlRUSV9TWU1CT0xfMV0/LmZxbjtcbiAgaWYgKHR5cGVvZiBmcW4gPT09IFwic3RyaW5nXCIgJiYgZnFuLnN0YXJ0c1dpdGgoXCJAYXdzLWNkay9cIikpIHtcbiAgICBjZGtNb2R1bGUgPSBmcW4uc3Vic3RyaW5nKDkpO1xuICB9XG5cbiAgcmV0dXJuIGNka01vZHVsZSA9PT0gbW9kdWxlTmFtZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQ29uc3RydWN0KGNvbnN0cnVjdDogY2RrLkNvbnN0cnVjdCk6IGJvb2xlYW4ge1xuICAvLyBAdHMtZXhwZWN0LWVycm9yIFRTNzA1MzogRWxlbWVudCBpbXBsaWNpdGx5IGhhcyBhbiAnYW55JyB0eXBlIGJlY2F1c2UgZXhwcmVzc2lvbiBvZiB0eXBlICd1bmlxdWUgc3ltYm9sJyBjYW4ndCBiZSB1c2VkIHRvIGluZGV4IHR5cGUgJ0Z1bmN0aW9uJy5cbiAgY29uc3QgZnFuID0gY29uc3RydWN0Py5jb25zdHJ1Y3Rvcj8uW0pTSUlfUlRUSV9TWU1CT0xfMV0/LmZxbjtcbiAgcmV0dXJuIHR5cGVvZiBmcW4gPT09IFwic3RyaW5nXCIgJiYgZnFuLnN0YXJ0c1dpdGgoXCJAYXdzLWNkay9cIik7XG59XG4iXX0=