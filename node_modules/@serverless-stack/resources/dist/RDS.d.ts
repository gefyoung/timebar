import { Construct } from 'constructs';
import * as ec2 from "aws-cdk-lib/aws-ec2";
import * as rds from "aws-cdk-lib/aws-rds";
import { SSTConstruct } from "./Construct";
import { Function as Fn } from "./Function";
export interface RDSProps {
    readonly rdsServerlessCluster?: RDSCdkServerlessClusterProps;
    readonly engine: RDSEngineType;
    readonly defaultDatabaseName: string;
    readonly migrations?: string;
}
export declare type RDSEngineType = "mysql5.6" | "mysql5.7" | "postgresql10.14";
export interface RDSCdkServerlessClusterProps extends Omit<rds.ServerlessClusterProps, "vpc" | "engine" | "defaultDatabaseName"> {
    readonly vpc?: ec2.IVpc;
}
export declare class RDS extends Construct implements SSTConstruct {
    readonly rdsServerlessCluster: rds.ServerlessCluster;
    readonly migratorFunction?: Fn;
    private readonly engine;
    private readonly defaultDatabaseName;
    constructor(scope: Construct, id: string, props: RDSProps);
    get clusterArn(): string;
    get clusterIdentifier(): string;
    get clusterEndpoint(): rds.Endpoint;
    get secretArn(): string;
    getConstructMetadata(): {
        type: "RDS";
        data: {
            engine: string;
            secretArn: string;
            clusterArn: string;
            clusterIdentifier: string;
            defaultDatabaseName: string;
            migrator: {
                node: string;
                stack: string;
            } | undefined;
        };
    };
    private validateRDSServerlessClusterProps;
    private validateRequiredProps;
    private validateMigrationsFileExists;
    private getEngine;
    private getVpc;
    private getVpcSubnets;
    private createMigrationsFunction;
    private createMigrationCustomResource;
}
