import { Construct } from "constructs";
import { Function as Fn, FunctionProps, FunctionDefinition } from "./Function";
import { Permissions } from "./util/permission";
export interface ScriptProps {
    readonly onCreate?: FunctionDefinition;
    readonly onUpdate?: FunctionDefinition;
    readonly onDelete?: FunctionDefinition;
    readonly params?: {
        [key: string]: any;
    };
    readonly defaultFunctionProps?: FunctionProps;
}
export declare class Script extends Construct {
    readonly createFunction?: Fn;
    readonly updateFunction?: Fn;
    readonly deleteFunction?: Fn;
    protected readonly props: ScriptProps;
    constructor(scope: Construct, id: string, props: ScriptProps);
    attachPermissions(permissions: Permissions): void;
    protected createUserFunction(type: string, fnDef?: FunctionDefinition): Fn | undefined;
    private createCustomResourceFunction;
    private createCustomResource;
    private checkDeprecatedFunction;
}
