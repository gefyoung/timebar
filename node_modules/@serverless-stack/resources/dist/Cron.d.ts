import { Construct } from "constructs";
import * as cdk from "aws-cdk-lib";
import * as events from "aws-cdk-lib/aws-events";
import * as eventsTargets from "aws-cdk-lib/aws-events-targets";
import { SSTConstruct } from "./Construct";
import { Function as Func, FunctionDefinition } from "./Function";
import { Permissions } from "./util/permission";
export interface CronProps {
    readonly job: FunctionDefinition | CronJobProps;
    readonly schedule?: string | cdk.Duration | events.CronOptions;
    readonly eventsRule?: events.RuleProps;
}
export interface CronJobProps {
    readonly function: FunctionDefinition;
    readonly jobProps?: eventsTargets.LambdaFunctionProps;
}
export declare class Cron extends Construct implements SSTConstruct {
    readonly eventsRule: events.Rule;
    readonly jobFunction: Func;
    constructor(scope: Construct, id: string, props: CronProps);
    attachPermissions(permissions: Permissions): void;
    getConstructMetadata(): {
        type: "Cron";
        data: {
            schedule: string | undefined;
            ruleName: string;
            job: {
                node: string;
                stack: string;
            } | undefined;
        };
    };
}
