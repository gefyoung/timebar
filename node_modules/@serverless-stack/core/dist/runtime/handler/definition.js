"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildSync = exports.buildAsync = void 0;
const cross_spawn_1 = __importDefault(require("cross-spawn"));
function buildAsync(opts, cmd) {
    const proc = (0, cross_spawn_1.default)(cmd.command, cmd.args, {
        env: {
            ...cmd.env,
            ...process.env,
        },
        cwd: opts.srcPath,
    });
    return new Promise((resolve) => {
        var _a, _b;
        let buffer = "";
        (_a = proc.stdout) === null || _a === void 0 ? void 0 : _a.on("data", (data) => (buffer += data));
        (_b = proc.stderr) === null || _b === void 0 ? void 0 : _b.on("data", (data) => (buffer += data));
        proc.on("exit", () => {
            if (proc.exitCode === 0)
                resolve([]);
            if (proc.exitCode !== 0) {
                resolve([
                    {
                        location: {
                            file: [opts.srcPath, opts.handler].join("/"),
                        },
                        message: buffer,
                    },
                ]);
            }
        });
    });
}
exports.buildAsync = buildAsync;
function buildSync(opts, cmd) {
    const result = cross_spawn_1.default.sync(cmd.command, cmd.args, {
        env: {
            ...cmd.env,
            ...process.env,
        },
        cwd: opts.srcPath,
    });
    if (result.status !== 0)
        throw new Error(result.output.map((b) => b === null || b === void 0 ? void 0 : b.toString()).join("\n"));
}
exports.buildSync = buildSync;
