"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Watcher = void 0;
const state_1 = require("../state");
const chokidar_1 = __importDefault(require("chokidar"));
const handler_1 = require("./handler");
const path_1 = __importDefault(require("path"));
const events_1 = require("../events");
const remeda_1 = require("remeda");
class Watcher {
    constructor() {
        this.onChange = new events_1.EventDelegate();
    }
    reload(root, config) {
        const funcs = state_1.State.Function.read(root);
        const instructions = funcs.map((f) => [f, handler_1.Handler.instructions(f)]);
        const paths = remeda_1.uniq(instructions.flatMap(([_, i]) => i.watcher.include));
        if (this.chokidar)
            this.chokidar.close();
        const ignored = [
            path_1.default.resolve(path_1.default.join(root, path_1.default.dirname(config.main), "**")),
            "**/node_modules/**",
            "**/.build/**",
            "**/.sst/**",
        ];
        this.chokidar = chokidar_1.default.watch(paths, {
            persistent: true,
            ignoreInitial: true,
            followSymlinks: false,
            disableGlobbing: false,
            ignored,
            awaitWriteFinish: {
                pollInterval: 100,
                stabilityThreshold: 20,
            },
        });
        this.chokidar.on("change", (file) => {
            this.onChange.trigger({
                files: [file],
            });
        });
    }
}
exports.Watcher = Watcher;
